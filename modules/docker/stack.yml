services:
  gluetun-deluge:
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
    #  - WIREGUARD_ENDPOINT_IP=!!!!!!!!!!!!!!!!!
    #  - WIREGUARD_ENDPOINT_PORT=!!!!!!!!!!!!!!!!!
    #  - WIREGUARD_PUBLIC_KEY=!!!!!!!!!!!!!!!!!
    #  - WIREGUARD_PRIVATE_KEY=!!!!!!!!!!!!!!!!!
    #  - WIREGUARD_PRESHARED_KEY=!!!!!!!!!!!!!!!!!
    #  - WIREGUARD_ADDRESSES=!!!!!!!!!!!!!!!!!
    env_file:
      - ~/docker/vpn.env
    ports:
      - 8112:8112 # Deluge
      - 6881:6881 # Deluge
      - 6881:6881/udp # Deluge
    restart: unless-stopped
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    depends_on:
      - gluetun-deluge
    network_mode: "service:gluetun-deluge"
    environment:
      - PUID=1001
      - PGID=100
      - TZ=Etc/UTC
    volumes:
      - ~/docker/deluge/config:/config
      - ~/docker/movies:/downloads
    restart: unless-stopped
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin-https.tls=true
      - traefik.http.routers.jellyfin-https.tls.certresolver=myresolver
      - traefik.http.routers.jellyfin-https.entrypoints=websecure
      - traefik.http.routers.jellyfin-https.rule=Host(`jellyfin.maxlttr7.duckdns.org`)
      - traefik.http.services.jellyfin-https.loadbalancer.server.port=8096
    environment:
      - PUID=1001
      - PGID=100
      - TZ=Etc/UTC
    volumes:
      - ~/docker/jellyfin/library:/config
      - ~/docker/movies:/data/movies
      - ~/docker/tvshows:/data/tvshows
    ports:
      - 8096:8096
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped
  n8n:
    image: docker.n8n.io/n8nio/n8n
    environment:
      - PUID=1001
      - PGID=100
      - GENERIC_TIMEZONE="Europe/Paris"
      - TZ="Europe/Paris"
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_SECURE_COOKIE=false
    volumes:
      - ~/Syncthing/docker/n8n:/home/node/.n8n
    ports:
      - 5678:5678
    restart: unless-stopped
# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
  pihole:
    image: pihole/pihole:latest
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "8088:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      - "4443:443/tcp"
      # Uncomment the line below if you are using Pi-hole as your DHCP server
      #- "67:67/udp"
      # Uncomment the line below if you are using Pi-hole as your NTP server
      #- "123:123/udp"
    environment:
      # Set the appropriate timezone for your location (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g:
      TZ: 'Europe/Paris'
      # Set a password to access the web interface. Not setting one will result in a random password being assigned
      #FTLCONF_webserver_api_password: 'correct horse battery staple'
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
    # Volumes store your data between container upgrades
    volumes:
      # For persisting Pi-hole's databases and common configuration file
      - '~/docker/pihole/etc-pihole:/etc/pihole'
      # Uncomment the below if you have custom dnsmasq config files that you want to persist. Not needed for most starting fresh with Pi-hole v6. If you're upgrading from v5 you and have used this directory before, you should keep it enabled for the first v6 container start to allow for a complete migration. It can be removed afterwards. Needs environment variable FTLCONF_misc_etc_dnsmasq_d: 'true'
      - '~/docker/etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # Required if you are using Pi-hole as your DHCP server, else not needed
      - NET_ADMIN
      # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
      - SYS_TIME
      # Optional, if Pi-hole should get some more processing time
      - SYS_NICE
    restart: unless-stopped
  portainer:
    image: portainer/portainer-ce:latest
    environment:
      - PUID=1001
      - PGID=100
      - TZ=Etc/UTC
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/docker/portainer/portainer_data:/data
    ports:
      - 9443:9443
    restart: unless-stopped
  traefik:
    image: traefik:latest
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./traefik-config.yml:/etc/traefik/traefik.yml
      - ~/docker/traefik/:/var/traefik/certs/:rw
      # touch ~/docker/traefik/acme.json && chmod 600 ~/docker/traefik/acme.json
    command:
      - "--global.sendAnonymousUsage=false"
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--api.debug=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.myresolver.acme.email=maxime.lettier@protonmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/var/traefik/certs/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    restart: unless-stopped
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    volumes:
      - ~/docker/uptime-kuma/uptime-kuma:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3001:3001
    restart: unless-stopped
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Europe/Paris
      - WATCHTOWER_CLEANUP=true # Remove old images after update
    restart: unless-stopped


networks:
  proxy:
    external: true