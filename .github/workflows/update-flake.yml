name: Update Nix Flake

on:
  schedule:
    - cron: '0 0 * * 1' # Run every Monday at 00:00
  workflow_dispatch: # Allow manual trigger from GitHub UI

jobs:
  update-flake:
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Nix # Installs Nix on the GitHub runner
      uses: cachix/install-nix-action@v31

    - name: Update flake.lock
      run: nix flake update

    - name: Nix flake check
      id: flake-check
      run: nix flake check
    - name: Create and Commit to a New Branch
      if: success()
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git checkout -b flake-auto-update
        git add flake.lock
        git commit -m "Update flake.lock"
        git push origin flake-auto-update
    
    - name: Create pull request
      if: success()
      run: |
        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/maxlttr1/nixos-config/pulls \
          -d '{
            "title": "Update to flake.lock",
            "body": "Please test it locally and merge the PR",
            "head": "maxlttr1:flake-auto-update",
            "base": "master"
          }'
    - name: Success notifications
      if: success()
      run: |
          curl -X POST ${{ secrets.DISCORD_WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d "{\"content\": \"üì£ Nix flake.lock updated and passed check. Please test it locally and merge the PR\"}"

      #   curl -d "‚úÖ Nix flake.lock updated and passed check" ntfy.sh/${{ secrets.NTFY_URL }}

    - name: Failure notifications
      if: failure()
      run: |
          curl -X POST ${{ secrets.DISCORD_WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d "{\"content\": \"‚ùå Nix flake update failed (will retry next week)\"}"

      #    curl -d "‚ùå Nix flake update failed (will retry next week)" ntfy.sh/${{ secrets.NTFY_URL }}